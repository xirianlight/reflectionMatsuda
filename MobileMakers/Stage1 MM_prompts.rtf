{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
\cocoascreenfonts1{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red100\green56\blue32;\red196\green26\blue22;\red170\green13\blue145;
\red0\green116\blue0;\red28\green0\blue207;\red46\green13\blue110;}
\margl1440\margr1440\margb1800\margt1800\vieww13900\viewh9780\viewkind0
\deftab720
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs36 \cf0 \expnd0\expndtw0\kerning0
Mobile Makers Academy \
Preparation And Supplemental Materials\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\'a9Mobile Makers Academy 2013\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul \ulc0 Stage 1 - Suggested Time: 15 hours
\fs36 \expnd0\expndtw0\kerning0
\ulnone 	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs32 \cf0 \expnd0\expndtw0\kerning0
Video: Objective-C Essential Training (lynda.com)
\fs28 \expnd0\expndtw0\kerning0
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 1 - Getting Started\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
1.1 Installing the tools 4m 42s  	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt: \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Install Xcode and register as an Apple Developer.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:Done\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
1.2 Creating your first application 11m 28s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Create your first application using the same steps Simon describes in the video. Familiarize yourself with the Xcode environment, specifically notice how it can be manipulated to display different helper tools and how it will attempt to fill in your code as you type it.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
	\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
1.3 Updates to this course 3m 31s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Why do you think it's important to be aware of the idiosyncracies with older versions of Objective-C and to keep up with new features as they are added?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Know the old code since you may have to enter an older project and tweak it or work on it, know the new since you'll see that too, want to author using new best practices, and hey, it may have gotten easier with new features or libraries.\
	\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 2 - Objective-C Basics\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
2.1 The Objective-C language 4m 11s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
How did Objective-C become the language to learn if you want to make apps for the iPhone and iPad?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Apple acquired NeXT, a Jobs startup, that heavily used it, and that merger led to OSX - so it's all based on that core Objective-C foundation. All together now.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
2.2 The structure of an Objective-C program 6m 15s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Create a new project. Go to the menu option Xcode/Preferences/Text_Editing and make sure "Line Numbers" is checked in the section marked "Show." Then add comments describing the purpose of each auto-generated line in the main.m file. For example on Line 17 I would write: "  NSLog(@"Hello, World!"); //instructs the console to output the phrase "Hello, World!")"  \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
DO THIS LATER\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
2.3 Compiling and running your code 8m 37s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Why might you build in one version of iOS but deploy in an older version?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Because you want users stuck on iPad first gens (4.2.1) to user your software. Bigger audience!\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 3 - Program Flow\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.1 Logging messages to the command line 6m 7s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Following the example in the video, write a program that calculates and outputs to the console the number of seconds in ten years. Copy and paste your code here.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx529\pardeftab529\pardirnatural

\f1\i0\fs22 \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 #import \cf3 <Foundation/Foundation.h>\cf2 \
\cf0 \
\cf4 int\cf0  main(\cf4 int\cf0  argc, \cf4 const\cf0  \cf4 char\cf0  * argv[])\
\{\
\
    \cf4 @autoreleasepool\cf0  \{\
        \
        \cf5 // insert code here...\cf0 \
        \cf4 int\cf0  seconds = \cf6 60\cf0 ;\
        \cf4 int\cf0  minutes = \cf6 60\cf0 ;\
        \cf4 int\cf0  hours = \cf6 24\cf0 ;\
        \cf4 int\cf0  days = \cf6 365\cf0 ;\
        \cf4 int\cf0  years = \cf6 10\cf0 ;\
        \
        \cf4 int\cf0  secondsInAYear = seconds * minutes * hours * days * years;\
        \
        \cf7 NSLog\cf0 (\cf3 @"There are %i seconds in ten years!"\cf0 , secondsInAYear);\
        \
    \}\
    \cf4 return\cf0  \cf6 0\cf0 ;\
\}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.2 Writing conditional code 7m 1s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Using Objective-C, create an integer variable called "day" that represents the days of the week. Write an if statement that checks whether "day" is a weekend day. If the day is a weekend day then have your program print a message saying "Have a nice weekend!" and if it's not, print a message saying "I hope you're having a good week!"\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\
\pard\tx529\pardeftab529\pardirnatural

\f1\i0\fs22 \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 #import \cf3 <Foundation/Foundation.h>\cf2 \
\cf0 \
\cf4 int\cf0  main(\cf4 int\cf0  argc, \cf4 const\cf0  \cf4 char\cf0  * argv[])\
\{\
\
    \cf4 @autoreleasepool\cf0  \{\
        \
        \cf5 // insert code here...\cf0 \
        \cf4 int\cf0  day = \cf6 1\cf0 ;\
        \cf5 //Insert code here that marks Monday as day 0, Tues as 1, etc. up to Sunday as 6\cf0 \
        \cf5 //I don't know how to write this yet...\cf0 \
        \
        \cf4 if\cf0  (day == \cf6 5\cf0  || day == \cf6 6\cf0 )\{\
            \cf7 NSLog\cf0 (\cf3 @"Have a nice weekend!"\cf0 );\
        \} \cf4 else\cf0  \{\
            \cf7 NSLog\cf0 (\cf3 @"I hope you're having a good week!"\cf0 );\
        \}\
\
        \
    \}\
    \cf4 return\cf0  \cf6 0\cf0 ;\
\}\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\f0\i\fs24 \cf0 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.3 The switch statement 5m 58s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Create a variable called "hurricaneCategory" and a switch statement that prints out a message describing a hurricane's category from 1-5. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx529\pardeftab529\pardirnatural

\f1\i0\fs22 \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 #import \cf3 <Foundation/Foundation.h>\cf2 \
\cf0 \
\cf4 int\cf0  main(\cf4 int\cf0  argc, \cf4 const\cf0  \cf4 char\cf0  * argv[])\
\{\
\
    \cf4 @autoreleasepool\cf0  \{\
        \
        \cf5 // insert code here...\cf0 \
        \cf4 int\cf0  hurricaneCategory = \cf6 1\cf0 ;\
\
        \cf4 switch\cf0  (hurricaneCategory) \{\
            \cf4 case\cf0  \cf6 1\cf0 :\
                \cf7 NSLog\cf0 (\cf3 @"It's not so bad, but get more water."\cf0 );\
                \cf4 break\cf0 ;\
            \cf4 case\cf0  \cf6 2\cf0 :\
                \cf7 NSLog\cf0 (\cf3 @"Alright, probably should board up the windows."\cf0 );\
                \cf4 break\cf0 ;\
            \cf4 case\cf0  \cf6 3\cf0 :\
                \cf7 NSLog\cf0 (\cf3 @"Make sure the generator has fuel and your cell phone works."\cf0 );\
                \cf4 break\cf0 ;\
            \cf4 case\cf0  \cf6 4\cf0 :\
                \cf7 NSLog\cf0 (\cf3 @"Call your loved ones."\cf0 );\
                \cf4 break\cf0 ;\
            \cf4 case\cf0  \cf6 5\cf0 :\
                \cf7 NSLog\cf0 (\cf3 @"You're living in a place where rodents are fit to breed and not a lot else should be happening."\cf0 );\
                \cf4 break\cf0 ;\
        \}\
        \
    \}\
    \cf4 return\cf0  \cf6 0\cf0 ;\
\}\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.4 Code snippets 5m 15s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Grab a code snippet, indent it to match the indent of your project, then add comments to it, then select the entire snippet you just modified and save it as your own code snippet. Time yourself and record how many seconds it takes you to do all this.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
about 30.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.5 Operators and expressions 11m 8s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
List the 6 types of operators described in this video. Provide their name, a description of their meaning, and the syntax you would use to execute them. What code snippet does the ternary operator replace?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Arithmetic\
	+ - * / \
	Used for mathematical computation\
Assignment\
	=\
	Used to declare equivalency.\
Comparison\
	== < > >= <=\
	Used to compare two values to each other, outputs a boolean based on the comparison\
Iteration\
	+= -= *= /=, a++, a--\
	Used to have an int perform an arithmetic function on itself\
Modulus\
	%\
	Used to calculate the remainder of a number\
	\
Ternary\
	condition ? true : false\
	Used in place of an if / else statement - tests a condition and gives two possible results for whether that condition is true or false\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.6 Loops 8m 53s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
CHALLENGE: Think of a scenario while using a mobile app that might require you to use a "continue" statement in the middle of a loop.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Puzzle and Dragon. iOS game that awards you for consecutive login days. Once you've logged in more than 10 times, the reward is the same, but you get special bonuses at 30, 60 and 100 days\
for (int i=10; i>10; i++)\
You would use a continue line at\
if \{\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.7 Functions 10m 16s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is a function? What is a function prototype? What are the purposes of each? What are the rules for when and how you can call a function?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
A function is any piece of code, usually a task, that is encapsulated so that it can be called / run many times without having to completely re-write that function many times. A function prototype is a guide to what kind of input and output are associated with the function and must be placed in a document BEFORE the function itself is called. By placing this before you call a function, you can actually place the body of the function at the end of your code, rather than having to place the entire function BEFORE the call.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 4 - Variables\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.1 Data types 7m 6s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are the primitive data types in Objective-C? Why did Apple add a set of classes to handle other data types?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
int, float, double, char, BOOL\
Apple added more because, quite simply, in modern code, you need more.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.2 Working with numbers 9m 33s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Make a table of Objective-C primitive data types. Add numeric data types and their properties to this table. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.3 Working with characters 4m 39s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Add char and BOOL (the character data types) to your table created above.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.4 Variable scope 8m 6s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Describe in your own words what the scope of a variable is in Objective-C\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Variable scope defines where a variable exists and can be changed or utilized. Local scope means that it's part of a smaller chunk of code, global scope means its available to be called or changed anywhere.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.5 Enumerations 3m 35s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What does "enum" allow you to do?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Create restrictive sets of possible values for a variable. Keeps things clean, and often more sensical than just numbers all the time.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.6 Using typedef 2m 17s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
When would you define your own data type versus use an enum?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
If you're going to create multiple variables of a similar type with complex naming structures, you can make a typedef of it\'85\
ASK ABOUT THIS, THIS IS WEIRD\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.7 Preprocessor directives 5m 56s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Describe the three common preprocessor directives, #import, #define, and #if DEBUG. Come up with one example where you would use each.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
#import - find this file, load it's contents, we're using anything inside of it and may call it\
#define - set a constant. This constant can be called in your program and will always bear the same value\
#if DEBUG - the code between this line and a line called #endif will be only visible while you're compiling in debug mode.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.8 Working with strings 7m 52s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Define the same string using both NSString and C-style string syntax. Describe the purpose behind each part of your definition.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
DO THIS LATER\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 5 - Classes\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
5.1 Introduction to object orientation 7m 36s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Create an encapsulated (including generalized attributes and behavior) description of a "mobileMakersParticipant" class. Instantiate a single object representing yourself as a member of this class.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
@ mobileMakersParticipant \{\
	@property NSString * studentName;\
	@property int studentAge;\
	@property char studentGender;\
	@property int studentExperienceLevel;\
-(void) StudyDammit\{\};\
-(void) DrinkCoffee\{\};\
-(void)EmploymentGet\{\};\
\}
\i \expnd0\expndtw0\kerning0
\

\i0 \expnd0\expndtw0\kerning0
mobileMakersParticipant *student1 = (NSString *) @"Ross Matsuda"\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
5.2 Using objects and pointers 6m 38s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is the pointer's role in instantiating an object from a class? How is a pointer different than a primitive?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Pointers are used to allocate memory to an object defined by a class. That pointer is then called in the future to access that object by referencing where it lives rather than the object itself over and over again. Pointers are flexible in size, while primitives are defined sizes.\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
5.3 Messages and methods 6m 44s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is the main difference between Objective-C's messages and method calls in other languages? How can this difference be seen as an advantage while programming?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
No use of colons, use of square brackets - [myObject myMethod:argument] -\
In other languages, it's myObject.someMethod(); - they use dot syntax\
in dot syntax, you'll also have result=myObject.someMethod - you do the same in OBJC, just prefix with result =\
in dot syntax, arg goes in parentheses, here we use colons\
[myObject someMethod:arg]\
Going further, with multiple arguments, instead of separating arguments by commas, we split the name up (looks kind of like CSS)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 \expnd0\expndtw0\kerning0
[myObject someMethod: arg continuationOfMethod : arg2 methodStillGoing : arg3 ]\expnd0\expndtw0\kerning0
\
\
Method calls where multiple arguments are required, the method can be broken down into smaller parts to make it easier to read and identify which variable is being fed into which part of the method. This is more readable, easier to communicate, easier to edit. Quite helpful. Most of the other syntax changes are just that - syntax, not about function. \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
5.4 Using existing classes in the foundation framework 8m 40s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What's the difference between a class method and an instance method? EXPLORE: Try typing "NSD\'85" into your code window. Use the autofill feature and select a single class name that starts with those three letters. Once the name has been auto-completed, use the handy shortcut (Option + click) and investigate the class whose name just got printed to the screen. Examine the task list for this class. Do this a few more times until you're familiar with the process, or until you've exhausted your curiosity, whichever comes last.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
A class method must call the class that owns it. An instance method must be called by an OBJECT of that class.\
\
method class: +(return) name;\
[NSMutableArray arrayWithArray: myArray];\
\
method instance: -(return)name;\
NSString * myString: @"A string.";\
NSString * myStringUC = [myString uppercaseString];\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 6 - Memory Management\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.1 What's new with memory management? 1m 45s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
(None)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.2 Memory management in Objective-C 6m 58s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is the relationship between a pointer to an object, a block of memory, and the owning and releasing process. Can you come up with an analogy for this relationship?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
A pointer is a reference used to find an object stored in memory. \
The concierge at a hotel and his guidebook.\
You come to a hotel and check in, the concierge checks you in to a room. He marks in his book that you're in room 144. Until you check out of that room, he will not remove your name and room number from his book. If you leave before he's aware of it, he may send people or services to your room and they won't be able to get in. If he erases your number early, you get kicked out because new tenants will show up and not know why your'e there.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.3 Object creation 7m 31s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What does the new method do when used to create an object instance of a class? Why do we avoid using this method? How long is an object's lifetime?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
the new method allocates memory and initializes the memory. We avoid doing this because you cannot do certain tasks with the information this way\'85 when you use an allocation and initialization call separately, you can give the object more definition, and you often have to when creating certain types of objects. So, go with the dedicated calls as your general rule so it won't trip you up when you have to use a more complex/informative init call. An object lives until its retainCount drops to zero (it is released). You have to do this, as it won't really happen all by its lonesome.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.4 Using autorelease pools 5m 14s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
How does the autorelease pool work? How and when can you use it deliberately? \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Put things in the pool that need to be released eventually, then drain the pool! \
Use autorelease when you have an object and a return of that object next to each other - you can\'92t release it BEFORE the return, or it\'92ll return nothing, but if you put it after, that code won\'92t run since return kicks you out of your function. Autorelease before the return and the code will do its thing for you. Good structure.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.5 Apple autoreleased objects 3m 39s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What does NARC stand for? Why is it important to remember this?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
New, alloc, retain, copy\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
If you see these lines in your code, you have to release those objects before you're all done
\i \expnd0\expndtw0\kerning0
\

\i0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.6 Introduction to Automatic Reference Counting (ARC) 4m 43s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What does ARC save us from having to do? How does it keep us from having to make this extra effort?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Retains/releases/autorelease are obsolete. THe compiler does it for us during build.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.7 What ARC manages 2m 42s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are the differences between ARC and garbage collection? What makes these differences advantageous?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Doesn't run during usage, so its faster, it's predictable while GC can happen without you really knowing when.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.8 The rules of ARC 4m 20s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Why can you not release or dealloc memory when working with ARC?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Because ARC is doing it, and it'll do it better than you ever could. HA.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 7 - Custom Classes\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
7.1 Creating your own classes 14m 1s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are the two different sections used to create a class? What do they hold and what files are they placed in? CHALLENGE: Create a Tweet class for a twitter style app.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Interface (.h) and implementation (.m)\
Interface holds the blueprint for the class, the properties and methods that it will eventually hold\
Implementation is just what it says - the actual properties and methods defined.\
TWEET CLASS\
\
@interface Tweet: NSObject\
	@property NSString *tweetContent;\
	@property NSDate * tweetDate;\
	@property int tweetNumber;\
-(NSString *) tweetLeetify;\
-(void) tweetRemove;\
\
@end\
\
@implementation Tweet\
	@synthesize tweetContent\
	@synthesize tweetDate\
	@synthesize tweetNumber\
\
-(NSString *) tweetLeetify : (NSString *) tweetContent \{\
	//make your tweet l33t because why the hell not\
	return leetedTweet;\
\}\
-(void) tweetRemove : (Tweet) tweetNumber \{\
	//delete your tweet\
	return NSLog(@"Yep, your tweet's gone");\
\}\
\
@end\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
7.2 Defining methods 8m 36s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
CHALLENGE: Define what should get passed in and what should get returned by each of your methods in your Tweet class above.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
DONE\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
7.3 Defining properties 7m 21s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
How did Objective-C programmers handle instance variables before 2012? How are they handled now? What got easier and what got obscured? \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
We don't really use them now unless we really want to specify them for internal-only usage. It got easier in one regards, since we don't have to @synthesize all our variables in our @implementation section, but that could mean it's easier to get mixed up or miss things...\
\
In the old days it was harder to pipe variables out because your instance variables were in curly braces. In the new method, it's easier! @properties can just be used (so I guess those are what got obscured). No getters/setters or accessor methods. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
7.4 Defining initializers 12m 30s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are initializers and why do we need to use them? Describe a situations when you can rely on the standard init method and when you have to create your own custom initializer. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Initializers allow you to set default parameters for objects. You would use a standard init call for an email address:\
If you had a domain called "freeze tag", when you create a new email address, you have the init for them to have suffix @freezetag.com  If you had a service that allowed you to spoof email addresses, you'd want custom initializers where you could take user in put and suffix your email addresses with their input. Assuming no input was given, there's your default again.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
7.5 Using dealloc 5m 33s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Why can we have a dealloc method in a class when using ARC, but we can't call dealloc manually oursevles when using ARC?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
You can have deallocs do custom things, but you'll never call them, ARC will. \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 8 - Collections\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
8.1 Working with C-style arrays 7m 12s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are the three constraints when using C-style arrays? Create a C-style array that holds the days of the week.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
1	No bounds checking in c-style arrays\
		That means that if you ask for the 99th slot of a 5-sized array, nothing will 		happen. It\'92ll let you ask for values that don\'92t exist\
2	Fixed size - you can\'92t change the size of the array after declaration\
3	Can\'92t mix types - all ints, all strings, etc.\
\
NSString *daysOfTheWeek[] = \{@"Monday", @"Tuesday", @"Wednesday", @"Thursday", @"Friday", @"Sat", @"Sun"\};\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
8.2 Working with Objective-C array objects 8m 0s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is the difference between a mutable and an immutable array? CHALLENGE: Create an immutable array containing the days of the week. Create a mutable array that contains the days of the week that you will be at Mobile Makers. Add the days of the week from the immutable array to the mutable array.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Mutable - can be changed (values, size of array), immutable is STUCK, that's it. Both are useful at different times.\
DO THE CHALLENGE LATER\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
8.3 Using dictionaries 5m 55s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Create a dictionary that lists five or more events in your life and the accompanying year (or date if you want to get fancy) of the event.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
NSDictionary *bigYears = \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
NSDictionary dictionaryWithObjectsAndKeys:\
	@"Gradauted college", @"2007",\
	@"Graduated High School", @"2003"\
	@"Started at Apple", @"2008"\
	@"Met Marissa", @"2011"\
	@"Born", @"1985",\
	nil];\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
8.4 Fast enumeration 3m 27s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Use fast enumeration to log the timeline of the life events you described above to the console.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
for (NSString *years in bigYears) \{\
	NSLog (@"I  %@ in %@", years, [bigYears objectForKey:years]); \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 9 - File Management\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
9.1 Introduction to file management in Objective-C 6m 44s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What can you do with files using the methods you are aware of that are available in Objective C's Foundation class.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
move, rename, delete, append, AND OH SO MUCH MORE, OH SAWEET JAYSUS.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
9.2 Working with paths and URLs 7m 17s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are the three parts of a URL? What are the advantages to using NSURL? \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
scheme, domain, path\
	NSURL is more supported and more powerful, since more methods interact with that rather than a string-based file path.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
9.3 Reading and writing strings 4m 38s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What would be a reason you would want to write a string to disk instead of just keeping it memory?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Save it for later usage, even after the program closes. SAVE GAMES!\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
9.4 Archiving objects 12m 41s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Why would you want to archive an object instead of writing the data to disk using the techniques discussed previously?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 10 - More Complex Classes\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
10.1 Inheritance and NSObject 8m 13s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
How can you determine what methods you're inheriting from a super class? How do you overide a method inherited from a super class? \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
10.2 Extending classes with categories 6m 31s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is the difference between a category and an inheritance? What are the limitations of using a category?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
10.3 Defining protocols 5m 14s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
How are protocols useful?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
10.4 Dynamic typing 11m 33s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are the advantages and disadvantages to dynamic typing?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
}