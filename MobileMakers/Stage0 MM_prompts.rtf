{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
\cocoascreenfonts1{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Consolas;\f2\fnil\fcharset0 Tahoma;
}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\margb1800\margt1800\vieww17620\viewh8940\viewkind0
\deftab720
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs36 \cf0 \expnd0\expndtw0\kerning0
Mobile Makers Academy \
Preparation And Supplemental Materials\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\'a9Mobile Makers Academy 2013\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul \ulc0 Stage 0 - Suggested Time: 10 hours
\fs36 \expnd0\expndtw0\kerning0
\ulnone 	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs32 \cf0 \expnd0\expndtw0\kerning0
Video: Foundations of Programming Fundamentals (lynda.com)
\fs28 \expnd0\expndtw0\kerning0
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 1 - Programming Basics\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
1.1 What is programming? 5m 45s 	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt: \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Imagine asking a friend to meet you at a restaurant. What instructions would a computer program need that your friend would not in order to understand how to get there?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response: \
Quantified information - direct instructions per navigation rather than esoteric, human terms. \
Move x distance forward or move until x condition is met (cross street equals Main)\
Turn right or left\
Wash, rinse and repeat.\
Oh, and end condition when you reach your destination so the program doesn't infinitely loop. That.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
1.2 What is a programming language? 4m 48s 	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is the difference between source code and machine code?  What does the CPU do?  Where are instructions and data stored?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
Source code is authored by humans, and on some level is readable. Machine code is what is actively executed by the computer - in general, this is very difficult to casually read or interpret. A CPU executes Machine code to perform tasks (instructions interpreted on the fly as course code is converted to machine code. Instructions and data are stored in the software being executed - whether it's executable files (compiled code) or source code (interpreted language files).\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
	\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
1.3 Writing source code 5m 34s 	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is an IDE and why is it useful?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
Integrated development environment - its usefulness lies in the tools that are built into it to facilitate coding / programming that exceed the capabilities of a plaintext editor.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
	\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
1.4 Compiled and interpreted languages 6m 4s 	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What kind of language is Objective-C? Why do you think we use it for making device specific applications? Why wouldn't we want to use an interpreted language for making iPhone and iPad apps?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
Objective C is a compiled language. It makes sense to use for device-specific applications due to the fact that it 
\b \expnd0\expndtw0\kerning0
is
\b0 \expnd0\expndtw0\kerning0
 a compiled language - the code is prepared for a specific device to optimize it, decrease processor load to execute it, and keeps your source code private (inherently more secure). Interpreted language applications would risk having degraded performance due to being interpreted on the fly, and anyone would be able to get into and edit your code, even steal parts of it.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 2 - Core Programming Syntax\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
2.1 Why JavaScript? 4m 45s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are the advantages and disadvantages to using a scripting language? What does javascript require in order to run? What does the phrase "case sensitive" mean? Why do we care if a language is case sensitive?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
Scripting languages in general run inside of other programs. They tend to be simpler to code in (higher-level) and support many platforms due to being an interpreted language. Javascript must run inside an JS environment, here, a web browser. Case sensitivity refers to the code you write being case-sensitive - the code can work or not work, not to mention mean different things, if you use upper- or lower-case characters.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
2.2 Creating your first program in JavaScript 6m 54s\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
How many layers deep (# of software levels) is the javascript code we write? What are those layers? How deep do you think the Objective-C code we write is?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response: 5, i suppose. The computer, OS, web browser, web page, then the JS itself. I'm unsure if the computer itself really counts, but I suppose machine code should. Objective C is a few layers more shallow, just needing the Computer and OS to house it.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
2.3 Requesting input 4m 50s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Why is it important to consider the possible inputs your users might give your program?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response: In order to know what any program, simple or complex, can do, one must know how someone will interact with it. If you don't, it may as well be a movie. Your code will respond differently to booleans, strings, whatever, so you have to predict what actions a user will take in order to make sure you can make their input meaningful in the world of your program.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 3 - Variables and Data Types\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.1 Introduction to variables and data types 5m 16s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What can variables be used for? Why is keeping track of and naming variables appropriately, so important?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:Variables are used for holding any encapsulated piece of data you believe you'll have to call upon again. Keeping track of them is essential, because you can have all the meaningful data in the world\'85 if you can't find it when you need it, it does not serve you at all.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.2 Understanding strong, weak, and duck-typed languages 3m 51s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is a boolean value? Wy use one instead of an int? When do you have to be conscious about what type of data you want a variable to contain?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response: Booleans are either true or false. They are often used instead of integers for simplicity and to prevent unwanted values from getting in. If you want to know if the user is over 18, for example, you can have them input their age (18) and then trip a flag that states var ofAge = true. By doing this, you prevent the var ofAge from containing numbers, which have more room for sloppiness than a simple, binary line. You need to be conscious about the data types you use once you start working with more complex functions or mathematics, or if the output you'll be generating is directly user-facing (name \uc0\u8800  age [Hello, 18!])\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.3 Working with numbers 5m 4s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What did a computer do originally? What does it do now? What is the difference between the assignment operator in programming and the equal sign in math? How does javascript determine the difference between a number and a string?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:Computers were humans who performed computations - mathematics. Nowadays, they do kittens. an assignment operator declares that henceforth, this shall equal this. In mathematics, it is used to balance equations - it lets you know that two disparate things are equivalent to each other, not defining one AS the other. JS determines whether its a string or number simply based on quotes. Anything goes in quotes, but they're just strings and cannot be used for mathematical computation.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.4 Using characters and strings 4m 5s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Research: What are the different properties of a string that we can ask a variable holding that string to determine?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
Constructor (function that created the string's prototype)\
length (duh)\
prototype (add properties and methods to an object?)\
N (character at that point in the string [n characters in is the letter/numeral it will print])\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.5 Working with operators 4m 47s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What differences do you notice between the arithmetic operators in programming and the math symbols used to represent these operators?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response: Instead of the letter X, we're using asterisks. Less confusing.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.6 Properly using white space 6m 46s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
When does white space matter? How is white space used in other forms of writing (blogs, presentations, emails)?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:White space matters when defining variables or other JS commands (var SPACE name), and when it is a part of a string, since that will be part of your output to a user. White spaces is used in other forms of writing for organizational and readability purposes.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.7 Adding comments to code for human understanding 1m 49s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Considering the entire lifetime of the code someone writes for an app, why do you think including comments when initially writing the code is such an important practice?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:You may have someone else after you leave the project, have to work on your code. They'd probably like to be able to read it. Probably.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 4 - Writing Conditional Code\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.1 Building with the if statement 7m 35s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Why is an if statement considered "conditional" code? What is the relationship between an if statement and a boolean? How is an if statement in programming similar to an "if\'85, then\'85" statement in logical reasoning?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.2 Working with complex conditions 4m 10s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Construct an "if... else" statement that would say "I am a maker" if the variable "MMA Program" reads as "completed" and "I'm becoming a maker" if it reads anything else.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
var mmaProgram\
if (mmaProgram = "completed") \{\
alert("I am a maker");\
\}\
\
if (mmaProgram != "completed")\{\
alert ("I'm becoming a maker");\
\}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.3 Setting comparison operators 6m 59s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Describe the differences between the single, double, and triple "=" signs. When do you think you might use a comparison operator while making a mobile application? \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
= means assign value to something\
== means check for equality between two objects (do not change either object)\
=== means Strict equality - same value, same TYPE.\
Comparison operators could be used for things like checking if the user hit a checkbox for when to check their mail. Give them 5 options, checking mail manually, every 5, 15, 30 or 60 minutes.\
If the checkMail variable is set to "15 minutes", ping the server every fifteen minutes.\
if it's larger, check less frequently, etc.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.4 Using the switch statement 6m 5s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Why would you use a switch statement as opposed to an if statement?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response: If you have a huge number of variables. A great example would be a character selection screen in a fighting game. You don't want to write a separate encapsulated statement for if he chose 1 of 32 characters, just make a switch - examine the character he chose, oh its this one, load his data.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 5 - Modular Code\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
5.1 Breaking your code apart 4m 1s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Quickly recognizing code blocks is a very important part of learning to program. What are the visual clues that tell you that you're about to start a new block of code? That you're inside a block of code? That you've completed a block of code?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response: Some of the visual cues you'll use will be braces and white space, depending on how much of  a mensch your developer was. In any piece of code, you can start counting out from where you are until you match all the braces/brackets (open and close). Some developers will be nice with using white space or commenting to help as well. Braces around you mean you're inside, braces after you, you're at the beginning, braces behind you, something just ended.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
5.2 Creating and calling functions 2m 57s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
In your own words, describe what it mean to "call a function?" What are three things functions allow us to do with our code? \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Calling functions is the act of, once a function is defined, telling it to execute within your code. Functions allow commonly used tasks to be saved and re-used easily, they clean up how the code can be read, and speed up the efficiency of debugging - imagine if instead of calling a function you've already defined, every time that would come up, you had an entire, albeit repeated, 20-line block of code. If you needed to change 
\i \expnd0\expndtw0\kerning0
one
\i0 \expnd0\expndtw0\kerning0
 thing in that code, you'd have to edit it EVERY SINGLE TIME it appears in the program. If it's a function, you just edit the function, and all future instances of that code block have been fixed.\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
5.3 Setting parameters and arguments 6m 7s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Create a function that takes two numbers and returns a boolean (true/false) if the first number is greater than the second. Create a conditional statement that prints the largest number using this function.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
function aBigger (a,b) \{\
	if (a >= b) \{\
		return true;\
	\}	\
	else \{\
		return false;\
	\}\
\}\
\
if (aBigger = true) \{\
	alert(a);\
\}\
else \{\
	alert(b);\
\}\
\
OR\
\
switch (aBigger) \{\
	case true:\
		alert(a);\
		break;\
	case false:\
		alert(b);\
		break;\
\}\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
5.4 Understanding variable scope 2m 23s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Imagine you're looking at several lines of Javascript and you come across a new variable as it's being defined. How might you determine that variable's scope just from looking at the code?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Look to see if the variable, as it is being defined, is inside a function. You can tell this through levels of indentation if the coder was polite, or by tracking braces to confirm you're not inside an extant piece of code.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
5.5 Splitting code into different files 2m 28s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Why do we split the code we write across multiple files?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response: Organization and collaboration\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 6 - Iteration: Writing Loops\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.1 Introduction to iteration 4m 28s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Why do we use loops? Why do we want to avoid infinite loops?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response: Infinite loops crash programs and computers. We use loops for repetitive tasks where you can define the task once and then have it repeat as needed while a condition is met.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.2 Writing a while statement 5m 24s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
If your while loop is started with " while (i < 100)" how many times does it actually run?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
If you defined i as 1, then 99\
If you defined i as 0, then 100\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.3 Creating a for loop 3m 40s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are the three statements (in regular english) that a "for loop" combines?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
For this object, as long as it meets this condition, do this task and then change the object like this\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 7 - More About Strings\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
7.1 Cleaning up with string concatenation 4m 30s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
In your own words, describe concatenation.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response: Concatenation is the act of putting object next to each other.\
If you add numbers together, they change : 5 + 5 equals ten\
Concatenated values just sit next to each other: 5 + 5 equals 5, 5.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
**************** 7.2 Finding patterns in strings 8m 3s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are strings and how can we use methods to manipulate them? CHALLENGE: Write a for loop that uses string comparison to sort a list of words into alphabetical order.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response: Strings are items in quotes - they can be just about anything, but most commonly are words, letters or numbers not meant to be used in computational processes. \
\
var a = "john";\
var b = "benjamin";\
var c = "enid";\
var d = "zulu";\
\
for (i=0, i<4, i++) \{		//here, going in assuming we know the list will only be four items long.\
	if (a < b) \{\
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
7.3 Introduction to regular expressions 6m 55s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Regular expressions are a special text string for describing a search pattern. When you're ordering something online to be shipped to your home, how many regular expressions do you think Amazon uses to verify that you've entered valid strings? CHALLENGE: Do a web search and collect all the regular expressions Amazon might use to validate your data entries.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Regular expressions Amazon uses to verify you've entered proper strings\
Is your name devoid of numerals\
Is your email address composed of characters, @ characters dot characters\
Is your zip code 5 numbers or five numbers dash four numbers\
Is your state equal to two letters\
and so forth.\
\
\pard\pardeftab720\li600

\f1 \cf0 \kerning1\expnd0\expndtw0 /^[a-z0-9_-]\{3,16\}$/\'a0\
Is your username valid!?\
/^[a-z0-9_-]\{6,18\}$/\'a0\'a0\
Is your password the correct length using allowed characters!?\
/^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]\{2,6\})$/\'a0\'a0\
Is your email address an email address!?\
\pard\pardeftab720

\f2\fs22 \cf0 ^\\s*((?:(?:\\d+(?:\\x20+\\w+\\.?)+(?:(?:\\x20+STREET|ST|DRIVE|DR|AVENUE|AVE|ROAD|RD|LOOP|COURT|CT|CIRCLE|LANE|LN|BOULEVARD|BLVD)\\.?)?)|(?:(?:P\\.\\x20?O\\.|P\\x20?\
	Some of what's needed to make sure your address is valid, holy crap
\f0\fs24 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 8 - Collections\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
8.1 Working with arrays 5m 47s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is an array? Where do you see it being useful? Describe why you think so.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
An array is a collection of data bundled together.\
Sick useful for inventories in video games: You can have an array for all the armor pieces in a game, then know that\
when dragon x is killed, have a 5% chance to award player item armorArray[2, 4, 10]\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
8.2 Array behavior 5m 29s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
How is a method different from a function? What is the value in having a good reference guide while programming?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
A function is something you create that is complex and can have innumerable internal steps. Methods are functions that specifically belong to an object - they're basically defaulted by the language you're working in and they aren't independently called WITHOUT the object they're influencing. \
Reference guides are essential because you cannot feasibly memorize and retain all the things all the time. It's better to understand how the language works and be able to look up what you need when you need. If you have to err on one side, it's not memorization, it's thorough understanding.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
8.3 Iterating through collections 5m 18s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
When iterating through an array, what values are you trying to retrieve? What can you do with those values?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
You are trying to retrieve the elements themselves, the entries in the array. You are finding them based on their index, their place in the array, from start to finish. You can perform just about any function you could on a variable on these elements. Some of the simpler tasks include being able to find out where they live in the array, add new elements to it, remove them, or use them for any other purpose.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
8.4 Collections in other languages 3m 25s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Create a 2x2 table. On the left hand side of the table, write "mixed data" next to the top box and "specific data" next to the bottom box. On the bottom of the table, write "mutable" next to the left box and "immutable" next to the right box. Fill in the boxes of the table with examples of each kind of array. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
					Mutable					Immutable\
Mixed data			password database			[15, false, "hello"] - but only 3 responses possible\
Specific data			PIN # database			Numeric representation of the months of the year\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 9 - Programming Style\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
9.1 Programming style 5m 55s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Do a google search for Objective-C style guildines. Look at several and bookmark the three ones you see as the easiest to read and understand.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
http://google-styleguide.googlecode.com/svn/trunk/objcguide.xml\
http://cocoadevcentral.com/articles/000082.php\
http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/CodingGuidelines/CodingGuidelines.html\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
9.2 Writing pseudocode 4m 55s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is pseudocode and how can it help you? CHALLENGE: Pick an app on your phone and write the pseudocode for any three interactions you might have with that app.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response: \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 10 - Input and Output\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
10.1 Input/output and persistence 3m 6s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is persistence and what is it going to help us do?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Persistence allows data from a program to be held externally and accessed or used outside of a single instance of a program.\
Saved settings, saved games, presets, etc.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
10.2 Reading and writing from the DOM 8m 11s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Working with objects is a fundamental part of programming in any language. For javascript, what the important steps in the process of working with the DOM?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Identify the document you're working on, identify all the objects within it (using standard nomenclature practices), and act upon them according to universally accepted best practices and nomenclature stratagem.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
10.3 Event driven programming 7m 47s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are the differences between objects and events? What are the difference between the code we write to work with each?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Objects are like objects on a desk - just stuff that sits there. Events are what occurs when someone touches or moves them, re-orders them, takes one away, etc. When we interact with an object, we change the parameters of the object or learn more about it. When we code on an event, we react to that event by acting upon objects.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
10.4 Introduction to file I/O 6m 51s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
CHALLENGE: Write some pseudocode that communicates how you might direct a music player application to access and play a song file.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
get name of file from user\
search music database for item with same name\
check file path for that music file\
if there is an item of that name present, open it\
play it\
close it\
else search music folder line by line for item with same name\
once it matches\
play it\
close it\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 11 - When Things Go Wrong\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
11.1 Introduction to debugging 5m 57s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is the difference between syntax errors and logic errors? What are some ways to look for each?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Syntax errors are mistyped characters, bracing formatting, etc. A logic error is just that, an error in the way the code is assembled or how you've phrased what you want it to do. Logic errors are harder to look for and require careful analysis of your code, looking for pieces out of order or functions that don't make sense. Syntax errors can be easier - look for lonely quotes or braces.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
11.2 Tracing through a section of code 7m 5s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Describe the process of using trace messages to debug your code. When would this be a useful approach and when would it not?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Using trace messages is helpful by placing alerts or other types of flags that you can notate as your code runs - they can show you how far you get in the process or when things fail, etc. It's useful in the way that it's effective at helping you see how far the code DOES work, and it makes you read the code again in a lot of ways. Problem is, it is quite time consuming, as you need to add the traces and eventually erase them.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
11.3 Understanding error messages 3m 21s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Describe two different errors that would have the same error message.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
fourth function is not defined - can be because the function name is wrong, like it is here, or because fourthFunction has a missing end curly brace.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
11.4 Using debuggers 8m 3s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
How can break points, stepping, and jumping functionality in a debugger help you find mystakes in your code?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Place break points at key moments when you need to see if the code reached THIS point. Stepping allows you to carefully track, pretty much line by line, code validity. Jumping allows you to trace a task outside in to see where it came from and how you got there.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 12 - Introduction to Object Orientation\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
12.1 Introduction to object-oriented languages 5m 18s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Define in your own words, the relationship among classes, objects, attributes, properties, behaviors, methods, and encapsulation\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Classes are broader definitions of an object without being an object itself. A class would be "student", the object would be the "student" Phil.\
Classes contain inside of them, attributes and behaviors - the properties of a "person" and behaviors a person can engage in.\
Attritues and Properties and almost identical in nature, as are behaviors and methods - defining how the object is and how the object acts.\
Encapsulation is the result of all this - the idea of taking all these descriptors and behaviors and bundling them together for easy access and usability.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
12.2 Using classes and objects 6m 29s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is the difference between a primitive and an object? How do you create an object?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Objects are capable of having properties and behaviors - they have more complex descriptors and such inside them and can be asked to perform tasks on themselves. A primitive is a simple data point with no other information.\
An object can be an array, containing many values inside of it, and able to have queries pushed through it (which is the biggest, change the order)\
A primitive would be "steven" - a single entry in the "name" array.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
12.3 Reviewing object-oriented languages 2m 30s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Research the existing classes in Objective-C and identify 10 that you've already interacted with when using an application.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
DO THIS LATER\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 13 - Advanced Topics\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
13.1 Memory management across languages 5m 11s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are the different steps for creating an object and managing its memory usage until its no longer needed? Why is it important to release memory?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
I't important to release memory in order to keep your program running quickly and efficiently. Not releasing memory can cause problems down the line, even crashing the program if it isn't managed correctly. In psuedocode, memory management is done in four steps, allocating memory for an object, creating said object, using it for as long as it needs to be around, and releasing the memory once you're done with it.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
13.2 Introduction to algorithms 4m 2s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Describe a real world example where one algorithm in practice is more efficient than another.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
In order to find the largest folder in a filing cabinet, you could compare each two like a bubble sort, until you force out the very largest ones, or you could use a more efficient algorithm and just take all the folders thicker than two fingers (likely only a few) and use their relative weight to asses their net size. Dozens versus just a few actions to find your answer.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
13.3 Introduction to multithreading 2m 1s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Create an analogy for the concept of multithreading. Feel free to draw from your past experience, your knowledge of culture or art, or anything else you can think of.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Short order chef. You sit there, wait for meal tickets, then cook the meals, and go in order. One table shows up, orders the roast duck. Knowing that this takes 20 minutes to cook, the waiter brings it up to you directly so you can put the duck in a separate oven so that it will complete without disrupting the rest, and allow the rest of the meal to arrive simultaneously with the duck. Bam.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 14 - Exploring the Languages\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
14.1 Introduction to languages 1m 42s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
(None)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
14.2 C-based languages 4m 40s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
(None)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
14.3 The Java world 3m 13s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
(None)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
14.4 .NET languages: C# and Visual Basic .NET 6m 17s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
(None)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
14.5 Ruby 3m 4s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
(None)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
14.6 Python 2m 56s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
(None)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
14.7 Objective-C 4m 3s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Why are we going to learn and work with Objective-C? Where does it come from?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Apple language! Comes from C, just with object-orientation added.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
14.8 Libraries and frameworks 3m 25s  
\b0\fs24 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
\
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Why is it important to learn about and be able to navigate your way through a language's library or framework?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
You don't need to build all this code from scratch, most of it has already been done, you just have to find it and put it together to make it work.\
\
}